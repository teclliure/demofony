CREATE TABLE action_index (keyword VARCHAR(200), field VARCHAR(50), position BIGINT, id BIGINT, PRIMARY KEY(keyword, field, position, id)) ENGINE = INNODB;
CREATE TABLE action (id BIGINT, author VARCHAR(150) NOT NULL, action_type VARCHAR(100) NOT NULL, title VARCHAR(255) NOT NULL, body LONGTEXT NOT NULL, action_date DATE, location VARCHAR(255), min_users_allowed BIGINT UNIQUE NOT NULL, max_users_allowed BIGINT, register_start_date DATE NOT NULL, register_end_date DATE, price DECIMAL(18, 2), active TINYINT(1) DEFAULT '1' NOT NULL, user_id BIGINT NOT NULL, created_at DATETIME NOT NULL, updated_at DATETIME NOT NULL, slug VARCHAR(255), latitude DOUBLE(18, 2), longitude DOUBLE(18, 2), UNIQUE INDEX action_sluggable_idx (slug, title, action_date), INDEX user_id_idx (user_id), PRIMARY KEY(id)) ENGINE = INNODB;
CREATE TABLE action_has_category (category_id BIGINT, action_id BIGINT, slug VARCHAR(255), UNIQUE INDEX action_has_category_sluggable_idx (slug), PRIMARY KEY(category_id, action_id)) ENGINE = INNODB;
CREATE TABLE action_user (action_id BIGINT, action_user_id BIGINT, slug VARCHAR(255), UNIQUE INDEX action_user_sluggable_idx (slug), PRIMARY KEY(action_id, action_user_id)) ENGINE = INNODB;
CREATE TABLE category (id BIGINT AUTO_INCREMENT, name VARCHAR(100) NOT NULL, description VARCHAR(255), slug VARCHAR(255), UNIQUE INDEX category_sluggable_idx (slug), PRIMARY KEY(id)) ENGINE = INNODB;
CREATE TABLE proposal_index (keyword VARCHAR(200), field VARCHAR(50), position BIGINT, id BIGINT, PRIMARY KEY(keyword, field, position, id)) ENGINE = INNODB;
CREATE TABLE proposal (id BIGINT, proposal_type VARCHAR(100) NOT NULL, publish_date DATE NOT NULL, title VARCHAR(255) NOT NULL, body LONGTEXT NOT NULL, image VARCHAR(255), video VARCHAR(255), tip LONGTEXT, user_id BIGINT NOT NULL, active TINYINT(1) DEFAULT '1' NOT NULL, created_at DATETIME NOT NULL, updated_at DATETIME NOT NULL, slug VARCHAR(255), latitude DOUBLE(18, 2), longitude DOUBLE(18, 2), UNIQUE INDEX proposal_sluggable_idx (slug, publish_date, title), INDEX user_id_idx (user_id), PRIMARY KEY(id)) ENGINE = INNODB;
CREATE TABLE proposal_has_category (proposal_id BIGINT, category_id BIGINT, slug VARCHAR(255), UNIQUE INDEX proposal_has_category_sluggable_idx (slug), PRIMARY KEY(proposal_id, category_id)) ENGINE = INNODB;
CREATE TABLE proposal_has_region (id BIGINT UNIQUE AUTO_INCREMENT, proposal_id BIGINT NOT NULL, region_id BIGINT NOT NULL, slug VARCHAR(255), UNIQUE INDEX proposal_has_region_sluggable_idx (slug), INDEX proposal_id_idx (proposal_id), INDEX region_id_idx (region_id), PRIMARY KEY(id)) ENGINE = INNODB;
CREATE TABLE region (id BIGINT, name VARCHAR(100) NOT NULL, description VARCHAR(255), lft INT, rgt INT, level SMALLINT, PRIMARY KEY(id)) ENGINE = INNODB;
CREATE TABLE response (id BIGINT, body LONGTEXT NOT NULL, initiative_id BIGINT, slug VARCHAR(255), UNIQUE INDEX response_sluggable_idx (slug), INDEX initiative_id_idx (initiative_id), PRIMARY KEY(id)) ENGINE = INNODB;
CREATE TABLE sf_guard_user_profile (id BIGINT AUTO_INCREMENT, user_id BIGINT UNIQUE NOT NULL, nickname VARCHAR(255), gender BIGINT, telephone VARCHAR(25), address VARCHAR(255), postal_code VARCHAR(10), location VARCHAR(150), province VARCHAR(150), country VARCHAR(150), web VARCHAR(255), about LONGTEXT, subscription_email TINYINT(1) DEFAULT '0', created_at DATETIME NOT NULL, updated_at DATETIME NOT NULL, latitude DOUBLE(18, 2), longitude DOUBLE(18, 2), INDEX user_id_idx (user_id), PRIMARY KEY(id)) ENGINE = INNODB;
CREATE TABLE subscription_category (user_profile_id BIGINT, category_id BIGINT, slug VARCHAR(255), UNIQUE INDEX subscription_category_sluggable_idx (slug), PRIMARY KEY(user_profile_id, category_id)) ENGINE = INNODB;
CREATE TABLE subscription_region (user_profile_id BIGINT, region_id BIGINT, slug VARCHAR(255), UNIQUE INDEX subscription_region_sluggable_idx (slug), PRIMARY KEY(user_profile_id, region_id)) ENGINE = INNODB;
CREATE TABLE virtual_meeting (id BIGINT, title VARCHAR(255) NOT NULL, body LONGTEXT NOT NULL, user_id BIGINT NOT NULL, answers_start_date DATE NOT NULL, answers_end_date DATE NOT NULL, slug VARCHAR(255), UNIQUE INDEX virtual_meeting_sluggable_idx (slug), INDEX user_id_idx (user_id), PRIMARY KEY(id)) ENGINE = INNODB;
CREATE TABLE virtual_meeting_answer (id BIGINT, answer LONGTEXT NOT NULL, opinion_id BIGINT NOT NULL, user_id BIGINT NOT NULL, slug VARCHAR(255), UNIQUE INDEX virtual_meeting_answer_sluggable_idx (slug), INDEX user_id_idx (user_id), PRIMARY KEY(id)) ENGINE = INNODB;
CREATE TABLE sf_guard_forgot_password (id BIGINT AUTO_INCREMENT, user_id BIGINT NOT NULL, unique_key VARCHAR(255), expires_at DATETIME NOT NULL, created_at DATETIME NOT NULL, updated_at DATETIME NOT NULL, INDEX user_id_idx (user_id), PRIMARY KEY(id)) ENGINE = INNODB;
CREATE TABLE sf_guard_group (id BIGINT AUTO_INCREMENT, name VARCHAR(255) UNIQUE, description TEXT, created_at DATETIME NOT NULL, updated_at DATETIME NOT NULL, PRIMARY KEY(id)) ENGINE = INNODB;
CREATE TABLE sf_guard_group_permission (group_id BIGINT, permission_id BIGINT, created_at DATETIME NOT NULL, updated_at DATETIME NOT NULL, PRIMARY KEY(group_id, permission_id)) ENGINE = INNODB;
CREATE TABLE sf_guard_permission (id BIGINT AUTO_INCREMENT, name VARCHAR(255) UNIQUE, description TEXT, created_at DATETIME NOT NULL, updated_at DATETIME NOT NULL, PRIMARY KEY(id)) ENGINE = INNODB;
CREATE TABLE sf_guard_remember_key (id BIGINT AUTO_INCREMENT, user_id BIGINT, remember_key VARCHAR(32), ip_address VARCHAR(50), created_at DATETIME NOT NULL, updated_at DATETIME NOT NULL, INDEX user_id_idx (user_id), PRIMARY KEY(id)) ENGINE = INNODB;
CREATE TABLE sf_guard_user (id BIGINT AUTO_INCREMENT, first_name VARCHAR(255), last_name VARCHAR(255), email_address VARCHAR(255) NOT NULL UNIQUE, username VARCHAR(128) NOT NULL UNIQUE, algorithm VARCHAR(128) DEFAULT 'sha1' NOT NULL, salt VARCHAR(128), password VARCHAR(128), is_active TINYINT(1) DEFAULT '1', is_super_admin TINYINT(1) DEFAULT '0', last_login DATETIME, created_at DATETIME NOT NULL, updated_at DATETIME NOT NULL, INDEX is_active_idx_idx (is_active), PRIMARY KEY(id)) ENGINE = INNODB;
CREATE TABLE sf_guard_user_group (user_id BIGINT, group_id BIGINT, created_at DATETIME NOT NULL, updated_at DATETIME NOT NULL, PRIMARY KEY(user_id, group_id)) ENGINE = INNODB;
CREATE TABLE sf_guard_user_permission (user_id BIGINT, permission_id BIGINT, created_at DATETIME NOT NULL, updated_at DATETIME NOT NULL, PRIMARY KEY(user_id, permission_id)) ENGINE = INNODB;
ALTER TABLE action_index ADD CONSTRAINT action_index_id_action_id FOREIGN KEY (id) REFERENCES action(id) ON UPDATE CASCADE ON DELETE CASCADE;
ALTER TABLE action ADD CONSTRAINT action_user_id_sf_guard_user_id FOREIGN KEY (user_id) REFERENCES sf_guard_user(id);
ALTER TABLE action_has_category ADD CONSTRAINT action_has_category_category_id_category_id FOREIGN KEY (category_id) REFERENCES category(id);
ALTER TABLE action_has_category ADD CONSTRAINT action_has_category_action_id_action_id FOREIGN KEY (action_id) REFERENCES action(id);
ALTER TABLE action_user ADD CONSTRAINT action_user_action_user_id_sf_guard_user_id FOREIGN KEY (action_user_id) REFERENCES sf_guard_user(id);
ALTER TABLE action_user ADD CONSTRAINT action_user_action_id_action_id FOREIGN KEY (action_id) REFERENCES action(id);
ALTER TABLE proposal_index ADD CONSTRAINT proposal_index_id_proposal_id FOREIGN KEY (id) REFERENCES proposal(id) ON UPDATE CASCADE ON DELETE CASCADE;
ALTER TABLE proposal ADD CONSTRAINT proposal_user_id_sf_guard_user_id FOREIGN KEY (user_id) REFERENCES sf_guard_user(id);
ALTER TABLE proposal_has_category ADD CONSTRAINT proposal_has_category_proposal_id_proposal_id FOREIGN KEY (proposal_id) REFERENCES proposal(id);
ALTER TABLE proposal_has_category ADD CONSTRAINT proposal_has_category_category_id_category_id FOREIGN KEY (category_id) REFERENCES category(id);
ALTER TABLE proposal_has_region ADD CONSTRAINT proposal_has_region_region_id_region_id FOREIGN KEY (region_id) REFERENCES region(id);
ALTER TABLE proposal_has_region ADD CONSTRAINT proposal_has_region_proposal_id_proposal_id FOREIGN KEY (proposal_id) REFERENCES proposal(id);
ALTER TABLE response ADD CONSTRAINT response_initiative_id_proposal_id FOREIGN KEY (initiative_id) REFERENCES proposal(id);
ALTER TABLE sf_guard_user_profile ADD CONSTRAINT sf_guard_user_profile_user_id_sf_guard_user_id FOREIGN KEY (user_id) REFERENCES sf_guard_user(id);
ALTER TABLE subscription_category ADD CONSTRAINT subscription_category_user_profile_id_sf_guard_user_profile_id FOREIGN KEY (user_profile_id) REFERENCES sf_guard_user_profile(id);
ALTER TABLE subscription_category ADD CONSTRAINT subscription_category_category_id_category_id FOREIGN KEY (category_id) REFERENCES category(id);
ALTER TABLE subscription_region ADD CONSTRAINT subscription_region_user_profile_id_sf_guard_user_profile_id FOREIGN KEY (user_profile_id) REFERENCES sf_guard_user_profile(id);
ALTER TABLE subscription_region ADD CONSTRAINT subscription_region_region_id_region_id FOREIGN KEY (region_id) REFERENCES region(id);
ALTER TABLE virtual_meeting ADD CONSTRAINT virtual_meeting_user_id_sf_guard_user_id FOREIGN KEY (user_id) REFERENCES sf_guard_user(id);
ALTER TABLE virtual_meeting_answer ADD CONSTRAINT virtual_meeting_answer_user_id_sf_guard_user_id FOREIGN KEY (user_id) REFERENCES sf_guard_user(id);
ALTER TABLE sf_guard_forgot_password ADD CONSTRAINT sf_guard_forgot_password_user_id_sf_guard_user_id FOREIGN KEY (user_id) REFERENCES sf_guard_user(id) ON DELETE CASCADE;
ALTER TABLE sf_guard_group_permission ADD CONSTRAINT sf_guard_group_permission_permission_id_sf_guard_permission_id FOREIGN KEY (permission_id) REFERENCES sf_guard_permission(id) ON DELETE CASCADE;
ALTER TABLE sf_guard_group_permission ADD CONSTRAINT sf_guard_group_permission_group_id_sf_guard_group_id FOREIGN KEY (group_id) REFERENCES sf_guard_group(id) ON DELETE CASCADE;
ALTER TABLE sf_guard_remember_key ADD CONSTRAINT sf_guard_remember_key_user_id_sf_guard_user_id FOREIGN KEY (user_id) REFERENCES sf_guard_user(id) ON DELETE CASCADE;
ALTER TABLE sf_guard_user_group ADD CONSTRAINT sf_guard_user_group_user_id_sf_guard_user_id FOREIGN KEY (user_id) REFERENCES sf_guard_user(id) ON DELETE CASCADE;
ALTER TABLE sf_guard_user_group ADD CONSTRAINT sf_guard_user_group_group_id_sf_guard_group_id FOREIGN KEY (group_id) REFERENCES sf_guard_group(id) ON DELETE CASCADE;
ALTER TABLE sf_guard_user_permission ADD CONSTRAINT sf_guard_user_permission_user_id_sf_guard_user_id FOREIGN KEY (user_id) REFERENCES sf_guard_user(id) ON DELETE CASCADE;
ALTER TABLE sf_guard_user_permission ADD CONSTRAINT sf_guard_user_permission_permission_id_sf_guard_permission_id FOREIGN KEY (permission_id) REFERENCES sf_guard_permission(id) ON DELETE CASCADE;
