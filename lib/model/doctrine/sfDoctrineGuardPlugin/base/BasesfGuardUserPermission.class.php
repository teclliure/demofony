<?php

/**
 * BasesfGuardUserPermission
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 * 
 * @property integer $user_id
 * @property integer $permission_id
 * @property sfGuardPermission $Permission
 * @property sfGuardUser $User
 * 
 * @method integer               getUserId()        Returns the current record's "user_id" value
 * @method integer               getPermissionId()  Returns the current record's "permission_id" value
 * @method sfGuardPermission     getPermission()    Returns the current record's "Permission" value
 * @method sfGuardUser           getUser()          Returns the current record's "User" value
 * @method sfGuardUserPermission setUserId()        Sets the current record's "user_id" value
 * @method sfGuardUserPermission setPermissionId()  Sets the current record's "permission_id" value
 * @method sfGuardUserPermission setPermission()    Sets the current record's "Permission" value
 * @method sfGuardUserPermission setUser()          Sets the current record's "User" value
 * 
 * @package    demofony
 * @subpackage model
 * @author     Marc Montañés <marc@teclliure.net>
 * @version    SVN: $Id: Builder.php 7691 2011-02-04 15:43:29Z jwage $
 */
abstract class BasesfGuardUserPermission extends sfDoctrineRecord
{
    public function setTableDefinition()
    {
        $this->setTableName('sf_guard_user_permission');
        $this->hasColumn('user_id', 'integer', null, array(
             'primary' => true,
             'type' => 'integer',
             ));
        $this->hasColumn('permission_id', 'integer', null, array(
             'primary' => true,
             'type' => 'integer',
             ));

        $this->option('symfony', array(
             'form' => false,
             'filter' => false,
             ));
    }

    public function setUp()
    {
        parent::setUp();
        $this->hasOne('sfGuardPermission as Permission', array(
             'local' => 'permission_id',
             'foreign' => 'id',
             'onDelete' => 'CASCADE'));

        $this->hasOne('sfGuardUser as User', array(
             'local' => 'user_id',
             'foreign' => 'id',
             'onDelete' => 'CASCADE'));

        $timestampable0 = new Doctrine_Template_Timestampable();
        $this->actAs($timestampable0);
    }
}