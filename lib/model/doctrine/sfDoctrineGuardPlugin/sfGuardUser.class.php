<?php

/**
 * sfGuardUser
 *
 * This class has been auto-generated by the Doctrine ORM Framework
 *
 * @package    demofony
 * @subpackage model
 * @author     Marc Montañés <marc@teclliure.net>
 * @version    SVN: $Id: Builder.php 7691 2011-02-04 15:43:29Z jwage $
 */
class sfGuardUser extends PluginsfGuardUser
{
  public function getNumberOpinions() {
    $num = Doctrine_core::getTable('Opinion')->createQuery('o')->where('o.user_id = ?',$this->getId())->execute()->count();
    $num2 = Doctrine_core::getTable('OpinionLike')->createQuery('ol')->where('ol.user_id = ?',$this->getId())->execute()->count();
    return $num+$num2;
  }
  
  public function getNumberComments() {
    return Doctrine_core::getTable('Comment')->createQuery('c')->where('c.user_id = ?',$this->getId())->execute()->count();
  }
  
  public function getNumberInitiatives() {
    return Doctrine_core::getTable('CitizenProposal')->createQuery('cp')->where('cp.user_id = ?',$this->getId())->execute()->count();
  }

  public function getInitiatives() {
    return Doctrine_core::getTable('CitizenProposal')->createQuery('cp')->where('cp.user_id = ?',$this->getId())->execute();
  }
  
  public function getActions() {
    $inheritedClasses = array('CitizenAction','Workshop');
    $sql = '';
    $selectFieldsQuery = Doctrine::getTable('Action')->getColumns();
    $select = '';
    foreach ($selectFieldsQuery as $key=>$selectField) {
      $select .= ','.$key;
    }
    foreach ($inheritedClasses as $key=>$class) {
      if ($key) $sql .= ' UNION ';
      $sql .= "( SELECT '$class' as class".$select.' FROM '.Doctrine::getTable($class)->getTableName().' where user_id = '.$this->getId().')';
    }
    $conn = Doctrine_Manager::connection();
    
    $pdo = $conn->execute($sql);
    $pdo->setFetchMode(Doctrine_Core::FETCH_ASSOC);
    $items = $pdo->fetchAll();
    
    $objects = array();
    foreach ($items as $item) {
      $class = $item['class'];
      unset ($item['class']);
      $object = new $class;
      $object->fromArray($item);
      $objects[] = $object;
    }
    return $objects;
  }
  
  public function getNumberActions() {
    return count($this->getActions());
  }
}
