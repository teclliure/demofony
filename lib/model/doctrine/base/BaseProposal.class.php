<?php

/**
 * BaseProposal
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 * 
 * @property integer $id
 * @property string $proposal_type
 * @property date $publish_date
 * @property string $title
 * @property clob $body
 * @property string $image
 * @property string $video
 * @property clob $tip
 * @property integer $user_id
 * @property boolean $active
 * @property sfGuardUser $sfGuardUser
 * @property Doctrine_Collection $Categories
 * @property Doctrine_Collection $Regions
 * @property Doctrine_Collection $ProposalHasRegion
 * @property Doctrine_Collection $ProposalHasCategory
 * @property Doctrine_Collection $Response
 * 
 * @method integer             getId()                  Returns the current record's "id" value
 * @method string              getProposalType()        Returns the current record's "proposal_type" value
 * @method date                getPublishDate()         Returns the current record's "publish_date" value
 * @method string              getTitle()               Returns the current record's "title" value
 * @method clob                getBody()                Returns the current record's "body" value
 * @method string              getImage()               Returns the current record's "image" value
 * @method string              getVideo()               Returns the current record's "video" value
 * @method clob                getTip()                 Returns the current record's "tip" value
 * @method integer             getUserId()              Returns the current record's "user_id" value
 * @method boolean             getActive()              Returns the current record's "active" value
 * @method sfGuardUser         getSfGuardUser()         Returns the current record's "sfGuardUser" value
 * @method Doctrine_Collection getCategories()          Returns the current record's "Categories" collection
 * @method Doctrine_Collection getRegions()             Returns the current record's "Regions" collection
 * @method Doctrine_Collection getProposalHasRegion()   Returns the current record's "ProposalHasRegion" collection
 * @method Doctrine_Collection getProposalHasCategory() Returns the current record's "ProposalHasCategory" collection
 * @method Doctrine_Collection getResponse()            Returns the current record's "Response" collection
 * @method Proposal            setId()                  Sets the current record's "id" value
 * @method Proposal            setProposalType()        Sets the current record's "proposal_type" value
 * @method Proposal            setPublishDate()         Sets the current record's "publish_date" value
 * @method Proposal            setTitle()               Sets the current record's "title" value
 * @method Proposal            setBody()                Sets the current record's "body" value
 * @method Proposal            setImage()               Sets the current record's "image" value
 * @method Proposal            setVideo()               Sets the current record's "video" value
 * @method Proposal            setTip()                 Sets the current record's "tip" value
 * @method Proposal            setUserId()              Sets the current record's "user_id" value
 * @method Proposal            setActive()              Sets the current record's "active" value
 * @method Proposal            setSfGuardUser()         Sets the current record's "sfGuardUser" value
 * @method Proposal            setCategories()          Sets the current record's "Categories" collection
 * @method Proposal            setRegions()             Sets the current record's "Regions" collection
 * @method Proposal            setProposalHasRegion()   Sets the current record's "ProposalHasRegion" collection
 * @method Proposal            setProposalHasCategory() Sets the current record's "ProposalHasCategory" collection
 * @method Proposal            setResponse()            Sets the current record's "Response" collection
 * 
 * @package    demofony
 * @subpackage model
 * @author     Marc Montañés <marc@teclliure.net>
 * @version    SVN: $Id: Builder.php 7691 2011-02-04 15:43:29Z jwage $
 */
abstract class BaseProposal extends sfDoctrineRecord
{
    public function setTableDefinition()
    {
        $this->setTableName('proposal');
        $this->hasColumn('id', 'integer', null, array(
             'primary' => true,
             'type' => 'integer',
             ));
        $this->hasColumn('proposal_type', 'string', 100, array(
             'type' => 'string',
             'notnull' => true,
             'length' => 100,
             ));
        $this->hasColumn('publish_date', 'date', null, array(
             'type' => 'date',
             'notnull' => true,
             ));
        $this->hasColumn('title', 'string', 255, array(
             'type' => 'string',
             'notnull' => true,
             'length' => 255,
             ));
        $this->hasColumn('body', 'clob', null, array(
             'type' => 'clob',
             'notnull' => true,
             ));
        $this->hasColumn('image', 'string', 255, array(
             'type' => 'string',
             'length' => 255,
             ));
        $this->hasColumn('video', 'string', 255, array(
             'type' => 'string',
             'length' => 255,
             ));
        $this->hasColumn('tip', 'clob', null, array(
             'type' => 'clob',
             ));
        $this->hasColumn('user_id', 'integer', null, array(
             'type' => 'integer',
             'notnull' => true,
             ));
        $this->hasColumn('active', 'boolean', null, array(
             'default' => 1,
             'type' => 'boolean',
             'notnull' => true,
             ));
    }

    public function setUp()
    {
        parent::setUp();
        $this->hasOne('sfGuardUser', array(
             'local' => 'user_id',
             'foreign' => 'id'));

        $this->hasMany('Category as Categories', array(
             'refClass' => 'ProposalHasCategory',
             'local' => 'proposal_id',
             'foreign' => 'category_id'));

        $this->hasMany('Region as Regions', array(
             'refClass' => 'ProposalHasRegion',
             'local' => 'proposal_id',
             'foreign' => 'region_id'));

        $this->hasMany('ProposalHasRegion', array(
             'local' => 'id',
             'foreign' => 'proposal_id'));

        $this->hasMany('ProposalHasCategory', array(
             'local' => 'id',
             'foreign' => 'proposal_id'));

        $this->hasMany('Response', array(
             'local' => 'id',
             'foreign' => 'initiative_id'));

        $timestampable0 = new Doctrine_Template_Timestampable();
        $sluggable0 = new Doctrine_Template_Sluggable(array(
             'alias' => 'slug',
             'unique' => true,
             'fields' => 
             array(
              0 => 'publish_date',
              1 => 'title',
             ),
             'uniqueBy' => 
             array(
              0 => 'publish_date',
              1 => 'title',
             ),
             ));
        $searchable0 = new Doctrine_Template_Searchable(array(
             'fields' => 
             array(
              0 => 'title',
              1 => 'body',
             ),
             ));
        $geographical0 = new Doctrine_Template_Geographical();
        $this->actAs($timestampable0);
        $this->actAs($sluggable0);
        $this->actAs($searchable0);
        $this->actAs($geographical0);
    }
}