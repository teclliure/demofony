<?php

/**
 * BaseContentHasRegion
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 * 
 * @property integer $content_id
 * @property integer $region_id
 * @property Content $Content
 * @property Region $Region
 * 
 * @method integer          getContentId()  Returns the current record's "content_id" value
 * @method integer          getRegionId()   Returns the current record's "region_id" value
 * @method Content          getContent()    Returns the current record's "Content" value
 * @method Region           getRegion()     Returns the current record's "Region" value
 * @method ContentHasRegion setContentId()  Sets the current record's "content_id" value
 * @method ContentHasRegion setRegionId()   Sets the current record's "region_id" value
 * @method ContentHasRegion setContent()    Sets the current record's "Content" value
 * @method ContentHasRegion setRegion()     Sets the current record's "Region" value
 * 
 * @package    demofony
 * @subpackage model
 * @author     Marc Montañés <marc@teclliure.net>
 * @version    SVN: $Id: Builder.php 7691 2011-02-04 15:43:29Z jwage $
 */
abstract class BaseContentHasRegion extends sfDoctrineRecord
{
    public function setTableDefinition()
    {
        $this->setTableName('content_has_region');
        $this->hasColumn('content_id', 'integer', null, array(
             'primary' => true,
             'type' => 'integer',
             ));
        $this->hasColumn('region_id', 'integer', null, array(
             'primary' => true,
             'type' => 'integer',
             ));
    }

    public function setUp()
    {
        parent::setUp();
        $this->hasOne('Content', array(
             'local' => 'content_id',
             'foreign' => 'id',
             'onDelete' => 'CASCADE'));

        $this->hasOne('Region', array(
             'local' => 'region_id',
             'foreign' => 'id',
             'onDelete' => 'CASCADE'));

        $sluggable0 = new Doctrine_Template_Sluggable(array(
             'unique' => true,
             ));
        $this->actAs($sluggable0);
    }
}