<?php

/**
 * BaseVirtualMeetingAnswer
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 * 
 * @property integer $id
 * @property string $answer
 * @property integer $virtual_meeting_question_id
 * @property VirtualMeetingQuestion $VirtualMeetingQuestion
 * 
 * @method integer                getId()                          Returns the current record's "id" value
 * @method string                 getAnswer()                      Returns the current record's "answer" value
 * @method integer                getVirtualMeetingQuestionId()    Returns the current record's "virtual_meeting_question_id" value
 * @method VirtualMeetingQuestion getVirtualMeetingQuestion()      Returns the current record's "VirtualMeetingQuestion" value
 * @method VirtualMeetingAnswer   setId()                          Sets the current record's "id" value
 * @method VirtualMeetingAnswer   setAnswer()                      Sets the current record's "answer" value
 * @method VirtualMeetingAnswer   setVirtualMeetingQuestionId()    Sets the current record's "virtual_meeting_question_id" value
 * @method VirtualMeetingAnswer   setVirtualMeetingQuestion()      Sets the current record's "VirtualMeetingQuestion" value
 * 
 * @package    demofony
 * @subpackage model
 * @author     Marc Montañés <marc@teclliure.net>
 * @version    SVN: $Id: Builder.php 7490 2010-03-29 19:53:27Z jwage $
 */
abstract class BaseVirtualMeetingAnswer extends sfDoctrineRecord
{
    public function setTableDefinition()
    {
        $this->setTableName('virtual_meeting_answer');
        $this->hasColumn('id', 'integer', null, array(
             'primary' => true,
             'type' => 'integer',
             'autoincrement' => true,
             ));
        $this->hasColumn('answer', 'string', 1000, array(
             'type' => 'string',
             'notnull' => true,
             'length' => 1000,
             ));
        $this->hasColumn('virtual_meeting_question_id', 'integer', null, array(
             'unique' => true,
             'type' => 'integer',
             'notnull' => true,
             ));
    }

    public function setUp()
    {
        parent::setUp();
        $this->hasOne('VirtualMeetingQuestion', array(
             'local' => 'virtual_meeting_question_id',
             'foreign' => 'id',
             'onDelete' => 'cascade'));

        $timestampable0 = new Doctrine_Template_Timestampable();
        $this->actAs($timestampable0);
    }
}