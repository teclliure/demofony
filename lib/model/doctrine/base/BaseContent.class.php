<?php

/**
 * BaseContent
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 * 
 * @property integer $id
 * @property string $title
 * @property clob $body
 * @property string $video
 * @property boolean $active
 * @property integer $views
 * @property integer $user_id
 * @property sfGuardUser $sfGuardUser
 * @property Doctrine_Collection $Response
 * 
 * @method integer             getId()          Returns the current record's "id" value
 * @method string              getTitle()       Returns the current record's "title" value
 * @method clob                getBody()        Returns the current record's "body" value
 * @method string              getVideo()       Returns the current record's "video" value
 * @method boolean             getActive()      Returns the current record's "active" value
 * @method integer             getViews()       Returns the current record's "views" value
 * @method integer             getUserId()      Returns the current record's "user_id" value
 * @method sfGuardUser         getSfGuardUser() Returns the current record's "sfGuardUser" value
 * @method Doctrine_Collection getResponse()    Returns the current record's "Response" collection
 * @method Content             setId()          Sets the current record's "id" value
 * @method Content             setTitle()       Sets the current record's "title" value
 * @method Content             setBody()        Sets the current record's "body" value
 * @method Content             setVideo()       Sets the current record's "video" value
 * @method Content             setActive()      Sets the current record's "active" value
 * @method Content             setViews()       Sets the current record's "views" value
 * @method Content             setUserId()      Sets the current record's "user_id" value
 * @method Content             setSfGuardUser() Sets the current record's "sfGuardUser" value
 * @method Content             setResponse()    Sets the current record's "Response" collection
 * 
 * @package    demofony
 * @subpackage model
 * @author     Marc Montañés <marc@teclliure.net>
 * @version    SVN: $Id: Builder.php 7691 2011-02-04 15:43:29Z jwage $
 */
abstract class BaseContent extends sfDoctrineRecord
{
    public function setTableDefinition()
    {
        $this->setTableName('content');
        $this->hasColumn('id', 'integer', null, array(
             'primary' => true,
             'type' => 'integer',
             'autoincrement' => true,
             ));
        $this->hasColumn('title', 'string', 255, array(
             'type' => 'string',
             'notnull' => true,
             'length' => 255,
             ));
        $this->hasColumn('body', 'clob', null, array(
             'type' => 'clob',
             'notnull' => true,
             ));
        $this->hasColumn('video', 'string', 255, array(
             'type' => 'string',
             'length' => 255,
             ));
        $this->hasColumn('active', 'boolean', null, array(
             'default' => 1,
             'type' => 'boolean',
             'notnull' => true,
             ));
        $this->hasColumn('views', 'integer', 16, array(
             'default' => 0,
             'type' => 'integer',
             'length' => 16,
             ));
        $this->hasColumn('user_id', 'integer', null, array(
             'type' => 'integer',
             'notnull' => true,
             ));
    }

    public function setUp()
    {
        parent::setUp();
        $this->hasOne('sfGuardUser', array(
             'local' => 'user_id',
             'foreign' => 'id',
             'onDelete' => 'CASCADE'));

        $this->hasMany('Response', array(
             'local' => 'id',
             'foreign' => 'initiative_id'));

        $timestampable0 = new Doctrine_Template_Timestampable();
        $sluggable0 = new Doctrine_Template_Sluggable(array(
             'alias' => 'slug',
             'unique' => true,
             'fields' => 
             array(
              0 => 'title',
             ),
             'uniqueBy' => 
             array(
              0 => 'title',
             ),
             ));
        $searchable0 = new Doctrine_Template_Searchable(array(
             'fields' => 
             array(
              0 => 'title',
              1 => 'body',
             ),
             ));
        $geographical0 = new Doctrine_Template_Geographical();
        $jcroppable0 = new Doctrine_Template_JCroppable(array(
             'images' => 
             array(
              0 => 'image',
             ),
             ));
        $commentable0 = new Doctrine_Template_Commentable();
        $this->actAs($timestampable0);
        $this->actAs($sluggable0);
        $this->actAs($searchable0);
        $this->actAs($geographical0);
        $this->actAs($jcroppable0);
        $this->actAs($commentable0);
    }
}