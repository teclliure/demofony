<?php

/**
 * BaseOpinionLike
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 * 
 * @property integer $user_id
 * @property integer $opinion_id
 * @property sfGuardUser $sfGuardUser
 * @property Opinion $Opinion
 * 
 * @method integer     getUserId()      Returns the current record's "user_id" value
 * @method integer     getOpinionId()   Returns the current record's "opinion_id" value
 * @method sfGuardUser getSfGuardUser() Returns the current record's "sfGuardUser" value
 * @method Opinion     getOpinion()     Returns the current record's "Opinion" value
 * @method OpinionLike setUserId()      Sets the current record's "user_id" value
 * @method OpinionLike setOpinionId()   Sets the current record's "opinion_id" value
 * @method OpinionLike setSfGuardUser() Sets the current record's "sfGuardUser" value
 * @method OpinionLike setOpinion()     Sets the current record's "Opinion" value
 * 
 * @package    demofony
 * @subpackage model
 * @author     Marc Montañés <marc@teclliure.net>
 * @version    SVN: $Id: Builder.php 7490 2010-03-29 19:53:27Z jwage $
 */
abstract class BaseOpinionLike extends sfDoctrineRecord
{
    public function setTableDefinition()
    {
        $this->setTableName('opinion_like');
        $this->hasColumn('user_id', 'integer', null, array(
             'primary' => true,
             'type' => 'integer',
             ));
        $this->hasColumn('opinion_id', 'integer', null, array(
             'primary' => true,
             'type' => 'integer',
             ));


        $this->index('IX_OpinionLike_1', array(
             'fields' => 
             array(
              0 => 'user_id',
              1 => 'opinion_id',
             ),
             'type' => 'unique',
             ));
    }

    public function setUp()
    {
        parent::setUp();
        $this->hasOne('sfGuardUser', array(
             'local' => 'user_id',
             'foreign' => 'id'));

        $this->hasOne('Opinion', array(
             'local' => 'opinion_id',
             'foreign' => 'id',
             'onDelete' => 'CASCADE'));
    }
}