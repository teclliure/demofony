<?php

/**
 * VirtualMeeting
 *
 * This class has been auto-generated by the Doctrine ORM Framework
 *
 * @package    demofony
 * @subpackage model
 * @author     Marc Montañés <marc@teclliure.net>
 * @version    SVN: $Id: Builder.php 7691 2011-02-04 15:43:29Z jwage $
 */
class VirtualMeeting extends BaseVirtualMeeting
{
    public function isOpened() {
      if (strtotime($this->getAnswersStartDate()) <= time() && strtotime($this->getAnswersEndDate()) >= time() && !$this->getArchived()) {
        return true;
      }
      else return false;
    }
    
    public function getState() {
      sfContext::getInstance()->getConfiguration()->loadHelpers(array('I18N'));
      if ($this->isOpened()) return __('Open Interview');
      else return __('Closed Interview');
    }
    
    public function getUrl() {
      return 'virtualMeeting/show?id='.$this->getId();
    }
    
    public function getNumUsers() {
      $query = Doctrine_Core::getTable('sfGuardUser')->createQuery('u')->leftJoin('u.VirtualMeetingQuestion vmq')->where('vmq.virtual_meeting_id = ?',$this->getId());
      return $query->count();
    }
    
    public function getNumQuestions() {
      $query = Doctrine_Core::getTable('VirtualMeetingQuestion')->createQuery('vmq')->where('vmq.virtual_meeting_id = ?',$this->getId());
      return $query->count();
    }
    
    public function getNumAnswers() {
      $query = Doctrine_Core::getTable('VirtualMeetingAnswer')->createQuery('vma')->leftJoin('vma.VirtualMeetingQuestion vmq')->where('vmq.virtual_meeting_id = ?',$this->getId());
      return $query->count();
    }
    
    public function getAnsweredQuestions() {
      $query = Doctrine_Core::getTable('VirtualMeetingQuestion')->createQuery('vmq')->innerJoin('vmq.VirtualMeetingAnswer vma')->where('vmq.virtual_meeting_id = ?',$this->getId());
      return $query->execute();
    }
    
    public function getNotAnsweredQuestions() {
      $query = Doctrine_Core::getTable('VirtualMeetingQuestion')
      ->createQuery('vmq')
      ->leftJoin('vmq.VirtualMeetingAnswer vma')
      ->where('vmq.virtual_meeting_id = ?',$this->getId())
      ->andWhere('vma.virtual_meeting_question_id IS NULL');
      return $query->execute();
    }
}
